{"version":3,"file":"index-cz783Qtw.js","sources":["../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/motion-utils/dist/es/errors.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../../node_modules/@heroui/card/node_modules/@heroui/dom-animation/dist/index.mjs"],"sourcesContent":["function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.15.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.15.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.15.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","\"use client\";\n\n// src/index.ts\nimport { domAnimation } from \"framer-motion\";\nvar src_default = domAnimation;\nexport {\n  src_default as default\n};\n"],"names":["shallowCompare","next","prev","prevLength","i","resolveVariant","visualElement","definition","custom","props","resolveVariantFromProps","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","criticallyDampedSpring","target","keyframesTransition","ease","getDefaultTransition","valueKey","keyframes","transformProps","getValueTransition","transition","key","isNotNull","value","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","index","invariant","noop","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","x","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","t","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","circOut","circInOut","isZeroValueString","v","isNone","isNumericalString","splitCSSVariableRegex","parseCSSVariable","current","match","token1","token2","fallback","getVariableValue","element","depth","token","resolved","trimmed","isCSSVariableToken","positionalKeys","isNumOrPxType","number","px","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","transform","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","y","paddingTop","paddingBottom","top","left","testValueType","type","auto","dimensionValueTypes","percent","degrees","vw","vh","findDimensionValueType","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","elementsToMeasure","transformsToRestore","restore","_a","readAllKeyframes","flushKeyframeResolvers","KeyframeResolver","unresolvedKeyframes","onComplete","name","motionValue","isAsync","frame","currentValue","valueAsRead","sanitize","floatRegex","isNullish","singleColorRegex","isColorString","testProp","splitColor","aName","bName","cName","a","b","c","alpha","clampRgbUnit","clamp","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","r","g","hex","hsla","hue","saturation","lightness","color","colorRegex","test","_b","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","values","indexes","types","split","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","getAnimatableNone","parsed","complex","maxDefaults","applyDefaultFilter","unit","defaultValue","functionRegex","filter","functions","defaultValueTypes","numberValueTypes","getDefaultValueType","defaultValueType","invalidTemplates","makeNoneKeyframesAnimatable","noneKeyframeIndexes","animatableTemplate","keyframe","noneIndex","DOMKeyframesResolver","origin","originType","targetType","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","now","clearTime","time","frameData","MotionGlobalConfig","newTime","isAnimatable","hasKeyframesChanged","canAnimate","velocity","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","MAX_RESOLVE_DELAY","BaseAnimation","autoplay","delay","repeatDelay","options","onUpdate","resolvedAnimation","resolve","reject","progress","from","to","toFromDifference","generateLinearEasing","duration","resolution","points","numPoints","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","e","f","initialGuess","approximateRoot","stiffness","rootIterations","result","maxGeneratorDuration","calcGeneratorDuration","generator","timeStep","state","durationKeys","physicsKeys","isSpringType","keys","getSpringOptions","springOptions","visualDuration","root","damping","derived","spring","optionsOrVisualDuration","restSpeed","restDelta","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","calculatedDuration","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","min","max","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isEasingArray","isBezierDefinition","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","transformers","mixNumber","hueToRgb","q","hslaToRgba","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixVisibility","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","matchOrder","orderedOrigin","pointers","originIndex","originValue","template","originStats","targetStats","mix","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","interpolator","progressInRange","fillOffset","offset","remaining","offsetProgress","defaultOffset","arr","convertOffsetToTimes","o","defaultEasing","keyframeValues","times","easingFunctions","absoluteTimes","mapTimeToKeyframe","frameloopDriver","update","passTimestamp","timestamp","cancelFrame","generators","percentToProgress","MainThreadAnimation","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","done","isAnimationFinished","newSpeed","hasChanged","driver","onPlay","startTime","acceleratedValues","memo","callback","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","d","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","attachTimeline","animation","timeline","supportsWaapi","sampleDelta","maxDuration","requiresPregeneratedKeyframes","pregenerateKeyframes","sampleAnimation","pregeneratedKeyframes","unsupportedEasingFunctions","isUnsupportedEase","AcceleratedAnimation","pregeneratedAnimation","sampleTime","supportsScrollTimeline","GroupPlaybackControls","animations","onResolve","onReject","propName","newValue","subscriptions","cancel","speed","methodName","controls","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","animateMotionValue","isHandoff","valueTransition","shouldSkip","addUniqueItem","item","removeItem","SubscriptionManager","handler","numSubscriptions","MAX_VELOCITY_DELTA","isFloat","MotionValue","init","render","currentTime","prevFrameValue","subscription","eventName","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","startAnimation","setMotionValue","setTarget","transitionEnd","resolveFinalValueInKeyframes","getOptimisedAppearId","optimizedAppearDataAttribute","isWillChangeMotionValue","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","valueTarget","appearId","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","child","animateVisualElement","resolvedDefinition","numVariantProps","variantProps","getVariantContext","context","prop","isVariantLabel","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","createAnimationState","animate","createState","isInitialRender","buildResolvedTypeValues","acc","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","isKeyframesTarget","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","isActive","createTypeState","Feature","node","AnimationFeature","prevAnimate","id","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","isDragging","isDragActive","resolveElements","elementOrSelector","scope","selectorCache","elements","setupGesture","gestureAbortController","eventOptions","filterEvents","event","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","isNodeOrChild","parent","isPrimaryPointer","focusableElements","isElementKeyboardAccessible","isPressing","firePointerEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","press","onPressStart","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","cancelEvent","extractEventInfo","addDomEvent","createAxis","createBox","convertBoundingBoxToBox","right","bottom","transformBoxPoints","point","transformPoint","topLeft","bottomRight","measureViewportBox","instance","handleHoverEvent","lifecycle","HoverGesture","FocusGesture","isFocusVisible","handlePressEvent","PressGesture","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","prevProps","hasViewportOptionChanged","prevViewport","gestureAnimations","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","isBrowser","motionMediaQuery","setReducedMotionPreferences","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","visualElementStore","valueTypes","findValueType","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","latestValues","renderState","isControllingVariants","isVariantNode","initialMotionValues","remove","feature","valueIsTransform","removeOnChange","removeOnRenderRequest","removeSyncCheck","other","featureDefinitions","featureDefinition","isEnabled","FeatureConstructor","listenerName","listener","closestVariantNode","initial","valueFromInitial","args","DOMVisualElement","vars","style","children","getComputedStyle","HTMLVisualElement","renderHTML","defaultType","computedStyle","isCSSVariableName","transformPagePoint","buildHTMLStyles","scrapeMotionValuesFromProps","SVGVisualElement","camelCaseAttributes","camelToDash","buildSVGAttrs","styleProp","projection","renderSVG","isSVGTag","createDomVisualElement","Component","isSVGComponent","Fragment","domAnimation","src_default"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133]}